const postcss = require('postcss')
const StyleSheet = require('./StyleSheet.js')

const Processor = postcss.plugin('chassis', cfg => root => new Promise((resolve, reject) => {
  let styleSheet = new StyleSheet(root, cfg)
  let queue = new NGN.Tasks()

  let process = (processor, cb) => styleSheet[processor](err => {
    if (err) {
      return reject(err)
    }

    cb()
  })

  queue.on('complete', () => {
    console.log('heyyy');
    resolve(root)
  })

  queue.add('Registering Mixins', process.bind(this, 'registerMixins'))
  // queue.add('Processing :not() Instances', this.#processNotSelectors)
  // queue.add('Processing Functions', this.#processFunctions)
  // queue.add('Processing Mixins', this.#processMixins)
  // queue.add('Constructing Output', process.bind(this, 'constructOutput'))
  // queue.add('Processing Nesting', this.#processNesting)

  // queue.add('Initializing Chassis Built-ins', next => {
  //   if (!this.#initialized) {
  //     return next()
  //   }
  //
  //   this.#initBuiltIns(next)
  // })

  // queue.add('Hoisting @imports', this.#hoistImports)
  queue.add('Setting @charset', process.bind(this, 'setCharset'))
  // queue.add('Namespacing Selectors', this.#namespaceSelectors)

  queue.run(true)
}))

module.exports = Processor
